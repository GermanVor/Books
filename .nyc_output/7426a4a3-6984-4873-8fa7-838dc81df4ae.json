{"C:\\Users\\mi\\Documents\\GitHub\\Books\\src\\server\\test\\test.js":{"path":"C:\\Users\\mi\\Documents\\GitHub\\Books\\src\\server\\test\\test.js","statementMap":{"0":{"start":{"line":3,"column":29},"end":{"line":3,"column":84}},"1":{"start":{"line":5,"column":12},"end":{"line":5,"column":51}},"2":{"start":{"line":7,"column":16},"end":{"line":7,"column":60}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":32}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":37}},"5":{"start":{"line":13,"column":13},"end":{"line":13,"column":33}},"6":{"start":{"line":14,"column":10},"end":{"line":14,"column":33}},"7":{"start":{"line":16,"column":11},"end":{"line":20,"column":1}},"8":{"start":{"line":17,"column":2},"end":{"line":19,"column":5}},"9":{"start":{"line":18,"column":4},"end":{"line":18,"column":87}},"10":{"start":{"line":23,"column":0},"end":{"line":37,"column":3}},"11":{"start":{"line":24,"column":13},"end":{"line":27,"column":3}},"12":{"start":{"line":29,"column":2},"end":{"line":36,"column":5}},"13":{"start":{"line":30,"column":4},"end":{"line":30,"column":37}},"14":{"start":{"line":31,"column":4},"end":{"line":33,"column":7}},"15":{"start":{"line":34,"column":4},"end":{"line":34,"column":33}},"16":{"start":{"line":35,"column":4},"end":{"line":35,"column":9}},"17":{"start":{"line":38,"column":0},"end":{"line":49,"column":3}},"18":{"start":{"line":39,"column":13},"end":{"line":42,"column":3}},"19":{"start":{"line":44,"column":2},"end":{"line":48,"column":5}},"20":{"start":{"line":45,"column":4},"end":{"line":45,"column":37}},"21":{"start":{"line":46,"column":4},"end":{"line":46,"column":75}},"22":{"start":{"line":47,"column":4},"end":{"line":47,"column":9}},"23":{"start":{"line":50,"column":0},"end":{"line":60,"column":3}},"24":{"start":{"line":51,"column":13},"end":{"line":53,"column":3}},"25":{"start":{"line":55,"column":2},"end":{"line":59,"column":5}},"26":{"start":{"line":56,"column":4},"end":{"line":56,"column":37}},"27":{"start":{"line":57,"column":4},"end":{"line":57,"column":75}},"28":{"start":{"line":58,"column":4},"end":{"line":58,"column":9}},"29":{"start":{"line":61,"column":0},"end":{"line":69,"column":3}},"30":{"start":{"line":62,"column":2},"end":{"line":68,"column":5}},"31":{"start":{"line":63,"column":4},"end":{"line":63,"column":37}},"32":{"start":{"line":64,"column":4},"end":{"line":64,"column":59}},"33":{"start":{"line":65,"column":4},"end":{"line":65,"column":69}},"34":{"start":{"line":66,"column":4},"end":{"line":66,"column":50}},"35":{"start":{"line":67,"column":4},"end":{"line":67,"column":9}},"36":{"start":{"line":70,"column":0},"end":{"line":77,"column":3}},"37":{"start":{"line":71,"column":2},"end":{"line":76,"column":5}},"38":{"start":{"line":72,"column":4},"end":{"line":72,"column":37}},"39":{"start":{"line":73,"column":4},"end":{"line":73,"column":65}},"40":{"start":{"line":74,"column":4},"end":{"line":74,"column":47}},"41":{"start":{"line":75,"column":4},"end":{"line":75,"column":9}},"42":{"start":{"line":78,"column":0},"end":{"line":86,"column":3}},"43":{"start":{"line":79,"column":18},"end":{"line":79,"column":24}},"44":{"start":{"line":81,"column":2},"end":{"line":85,"column":5}},"45":{"start":{"line":82,"column":4},"end":{"line":82,"column":37}},"46":{"start":{"line":83,"column":4},"end":{"line":83,"column":110}},"47":{"start":{"line":84,"column":4},"end":{"line":84,"column":9}},"48":{"start":{"line":87,"column":0},"end":{"line":95,"column":3}},"49":{"start":{"line":88,"column":13},"end":{"line":88,"column":27}},"50":{"start":{"line":90,"column":2},"end":{"line":94,"column":5}},"51":{"start":{"line":91,"column":4},"end":{"line":91,"column":37}},"52":{"start":{"line":92,"column":4},"end":{"line":92,"column":65}},"53":{"start":{"line":93,"column":4},"end":{"line":93,"column":9}},"54":{"start":{"line":96,"column":0},"end":{"line":106,"column":3}},"55":{"start":{"line":97,"column":20},"end":{"line":99,"column":3}},"56":{"start":{"line":101,"column":2},"end":{"line":105,"column":5}},"57":{"start":{"line":102,"column":4},"end":{"line":102,"column":37}},"58":{"start":{"line":103,"column":4},"end":{"line":103,"column":69}},"59":{"start":{"line":104,"column":4},"end":{"line":104,"column":9}},"60":{"start":{"line":107,"column":0},"end":{"line":156,"column":3}},"61":{"start":{"line":108,"column":20},"end":{"line":116,"column":3}},"62":{"start":{"line":117,"column":2},"end":{"line":122,"column":5}},"63":{"start":{"line":118,"column":4},"end":{"line":121,"column":7}},"64":{"start":{"line":119,"column":6},"end":{"line":119,"column":39}},"65":{"start":{"line":120,"column":6},"end":{"line":120,"column":11}},"66":{"start":{"line":123,"column":2},"end":{"line":131,"column":5}},"67":{"start":{"line":124,"column":4},"end":{"line":130,"column":7}},"68":{"start":{"line":125,"column":6},"end":{"line":125,"column":39}},"69":{"start":{"line":126,"column":6},"end":{"line":126,"column":48}},"70":{"start":{"line":127,"column":6},"end":{"line":127,"column":71}},"71":{"start":{"line":128,"column":6},"end":{"line":128,"column":83}},"72":{"start":{"line":129,"column":6},"end":{"line":129,"column":11}},"73":{"start":{"line":132,"column":2},"end":{"line":143,"column":5}},"74":{"start":{"line":133,"column":22},"end":{"line":133,"column":28}},"75":{"start":{"line":134,"column":22},"end":{"line":136,"column":5}},"76":{"start":{"line":138,"column":4},"end":{"line":142,"column":7}},"77":{"start":{"line":139,"column":6},"end":{"line":139,"column":39}},"78":{"start":{"line":140,"column":6},"end":{"line":140,"column":114}},"79":{"start":{"line":141,"column":6},"end":{"line":141,"column":11}},"80":{"start":{"line":144,"column":2},"end":{"line":155,"column":5}},"81":{"start":{"line":145,"column":15},"end":{"line":145,"column":29}},"82":{"start":{"line":146,"column":22},"end":{"line":148,"column":5}},"83":{"start":{"line":150,"column":4},"end":{"line":154,"column":7}},"84":{"start":{"line":151,"column":6},"end":{"line":151,"column":39}},"85":{"start":{"line":152,"column":6},"end":{"line":152,"column":67}},"86":{"start":{"line":153,"column":6},"end":{"line":153,"column":11}},"87":{"start":{"line":157,"column":0},"end":{"line":165,"column":3}},"88":{"start":{"line":158,"column":13},"end":{"line":158,"column":27}},"89":{"start":{"line":160,"column":2},"end":{"line":164,"column":5}},"90":{"start":{"line":161,"column":4},"end":{"line":161,"column":37}},"91":{"start":{"line":162,"column":4},"end":{"line":162,"column":65}},"92":{"start":{"line":163,"column":4},"end":{"line":163,"column":9}},"93":{"start":{"line":166,"column":0},"end":{"line":234,"column":3}},"94":{"start":{"line":179,"column":15},"end":{"line":182,"column":3}},"95":{"start":{"line":183,"column":13},"end":{"line":204,"column":3}},"96":{"start":{"line":205,"column":2},"end":{"line":224,"column":5}},"97":{"start":{"line":206,"column":4},"end":{"line":223,"column":7}},"98":{"start":{"line":207,"column":6},"end":{"line":207,"column":36}},"99":{"start":{"line":208,"column":6},"end":{"line":208,"column":39}},"100":{"start":{"line":209,"column":6},"end":{"line":211,"column":9}},"101":{"start":{"line":212,"column":6},"end":{"line":214,"column":9}},"102":{"start":{"line":215,"column":6},"end":{"line":217,"column":9}},"103":{"start":{"line":218,"column":6},"end":{"line":220,"column":9}},"104":{"start":{"line":221,"column":6},"end":{"line":221,"column":33}},"105":{"start":{"line":222,"column":6},"end":{"line":222,"column":13}}},"fnMap":{"0":{"name":"uuid","decl":{"start":{"line":16,"column":20},"end":{"line":16,"column":24}},"loc":{"start":{"line":16,"column":27},"end":{"line":20,"column":1}},"line":16},"1":{"name":"(anonymous_1)","decl":{"start":{"line":17,"column":65},"end":{"line":17,"column":66}},"loc":{"start":{"line":17,"column":87},"end":{"line":19,"column":3}},"line":17},"2":{"name":"(anonymous_2)","decl":{"start":{"line":23,"column":33},"end":{"line":23,"column":34}},"loc":{"start":{"line":23,"column":47},"end":{"line":37,"column":1}},"line":23},"3":{"name":"(anonymous_3)","decl":{"start":{"line":29,"column":99},"end":{"line":29,"column":100}},"loc":{"start":{"line":29,"column":119},"end":{"line":36,"column":3}},"line":29},"4":{"name":"(anonymous_4)","decl":{"start":{"line":38,"column":63},"end":{"line":38,"column":64}},"loc":{"start":{"line":38,"column":77},"end":{"line":49,"column":1}},"line":38},"5":{"name":"(anonymous_5)","decl":{"start":{"line":44,"column":99},"end":{"line":44,"column":100}},"loc":{"start":{"line":44,"column":119},"end":{"line":48,"column":3}},"line":44},"6":{"name":"(anonymous_6)","decl":{"start":{"line":50,"column":60},"end":{"line":50,"column":61}},"loc":{"start":{"line":50,"column":74},"end":{"line":60,"column":1}},"line":50},"7":{"name":"(anonymous_7)","decl":{"start":{"line":55,"column":99},"end":{"line":55,"column":100}},"loc":{"start":{"line":55,"column":119},"end":{"line":59,"column":3}},"line":55},"8":{"name":"(anonymous_8)","decl":{"start":{"line":61,"column":51},"end":{"line":61,"column":52}},"loc":{"start":{"line":61,"column":65},"end":{"line":69,"column":1}},"line":61},"9":{"name":"(anonymous_9)","decl":{"start":{"line":62,"column":103},"end":{"line":62,"column":104}},"loc":{"start":{"line":62,"column":123},"end":{"line":68,"column":3}},"line":62},"10":{"name":"(anonymous_10)","decl":{"start":{"line":70,"column":40},"end":{"line":70,"column":41}},"loc":{"start":{"line":70,"column":54},"end":{"line":77,"column":1}},"line":70},"11":{"name":"(anonymous_11)","decl":{"start":{"line":71,"column":106},"end":{"line":71,"column":107}},"loc":{"start":{"line":71,"column":126},"end":{"line":76,"column":3}},"line":71},"12":{"name":"(anonymous_12)","decl":{"start":{"line":78,"column":60},"end":{"line":78,"column":61}},"loc":{"start":{"line":78,"column":74},"end":{"line":86,"column":1}},"line":78},"13":{"name":"(anonymous_13)","decl":{"start":{"line":81,"column":106},"end":{"line":81,"column":107}},"loc":{"start":{"line":81,"column":126},"end":{"line":85,"column":3}},"line":81},"14":{"name":"(anonymous_14)","decl":{"start":{"line":87,"column":58},"end":{"line":87,"column":59}},"loc":{"start":{"line":87,"column":72},"end":{"line":95,"column":1}},"line":87},"15":{"name":"(anonymous_15)","decl":{"start":{"line":90,"column":101},"end":{"line":90,"column":102}},"loc":{"start":{"line":90,"column":121},"end":{"line":94,"column":3}},"line":90},"16":{"name":"(anonymous_16)","decl":{"start":{"line":96,"column":44},"end":{"line":96,"column":45}},"loc":{"start":{"line":96,"column":58},"end":{"line":106,"column":1}},"line":96},"17":{"name":"(anonymous_17)","decl":{"start":{"line":101,"column":124},"end":{"line":101,"column":125}},"loc":{"start":{"line":101,"column":144},"end":{"line":105,"column":3}},"line":101},"18":{"name":"(anonymous_18)","decl":{"start":{"line":107,"column":47},"end":{"line":107,"column":48}},"loc":{"start":{"line":107,"column":59},"end":{"line":156,"column":1}},"line":107},"19":{"name":"(anonymous_19)","decl":{"start":{"line":117,"column":78},"end":{"line":117,"column":79}},"loc":{"start":{"line":117,"column":92},"end":{"line":122,"column":3}},"line":117},"20":{"name":"(anonymous_20)","decl":{"start":{"line":118,"column":126},"end":{"line":118,"column":127}},"loc":{"start":{"line":118,"column":146},"end":{"line":121,"column":5}},"line":118},"21":{"name":"(anonymous_21)","decl":{"start":{"line":123,"column":78},"end":{"line":123,"column":79}},"loc":{"start":{"line":123,"column":92},"end":{"line":131,"column":3}},"line":123},"22":{"name":"(anonymous_22)","decl":{"start":{"line":124,"column":125},"end":{"line":124,"column":126}},"loc":{"start":{"line":124,"column":145},"end":{"line":130,"column":5}},"line":124},"23":{"name":"(anonymous_23)","decl":{"start":{"line":132,"column":54},"end":{"line":132,"column":55}},"loc":{"start":{"line":132,"column":68},"end":{"line":143,"column":3}},"line":132},"24":{"name":"(anonymous_24)","decl":{"start":{"line":138,"column":128},"end":{"line":138,"column":129}},"loc":{"start":{"line":138,"column":148},"end":{"line":142,"column":5}},"line":138},"25":{"name":"(anonymous_25)","decl":{"start":{"line":144,"column":50},"end":{"line":144,"column":51}},"loc":{"start":{"line":144,"column":64},"end":{"line":155,"column":3}},"line":144},"26":{"name":"(anonymous_26)","decl":{"start":{"line":150,"column":121},"end":{"line":150,"column":122}},"loc":{"start":{"line":150,"column":141},"end":{"line":154,"column":5}},"line":150},"27":{"name":"(anonymous_27)","decl":{"start":{"line":157,"column":50},"end":{"line":157,"column":51}},"loc":{"start":{"line":157,"column":64},"end":{"line":165,"column":1}},"line":157},"28":{"name":"(anonymous_28)","decl":{"start":{"line":160,"column":104},"end":{"line":160,"column":105}},"loc":{"start":{"line":160,"column":124},"end":{"line":164,"column":3}},"line":160},"29":{"name":"(anonymous_29)","decl":{"start":{"line":166,"column":40},"end":{"line":166,"column":41}},"loc":{"start":{"line":166,"column":52},"end":{"line":234,"column":1}},"line":166},"30":{"name":"(anonymous_30)","decl":{"start":{"line":205,"column":106},"end":{"line":205,"column":107}},"loc":{"start":{"line":205,"column":122},"end":{"line":224,"column":3}},"line":205},"31":{"name":"(anonymous_31)","decl":{"start":{"line":206,"column":105},"end":{"line":206,"column":106}},"loc":{"start":{"line":206,"column":125},"end":{"line":223,"column":5}},"line":206}},"branchMap":{"0":{"loc":{"start":{"line":18,"column":12},"end":{"line":18,"column":72}},"type":"cond-expr","locations":[{"start":{"line":18,"column":30},"end":{"line":18,"column":56}},{"start":{"line":18,"column":59},"end":{"line":18,"column":72}}],"line":18}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":3,"9":93,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0},"f":{"0":3,"1":93,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1},"b":{"0":[90,3]},"inputSourceMap":{"version":3,"sources":["test.js"],"names":["chai","use","chatHttp","expect","app","uuid","replace","value_x","r","Math","random","toString","author_id","book_id","it","cb","data","name","description","request","post","set","send","end","err","res","status","to","equal","body","include","id","descriptions","should","have","property","eql","get","not","lengthOf","random_id","updatedData","put","describe","books","title","rating","genre","random_uuid","delete","author","book","authors","done","console","log","trim"],"mappings":";;;;AAAA;;AACA;;AACA;;AAEAA,cAAKC,GAAL,CAASC,iBAAT;;IAEOC,M,GAAUH,a,CAAVG,M;AACP,IAAMC,GAAG,GAAG,uBAAZ;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,SAAM,uCAAuCC,OAAvC,CAA+C,OAA/C,EACjB,UAACC,OAAD,EAAUC,CAAV;AAAA,WAAgB,CAAC,QAAQD,OAAR,GAAmBC,CAAC,GAAGC,IAAI,CAACC,MAAL,KAAgB,EAAhB,GAAqB,CAA5C,GAAkDF,CAAC,GAAG,GAAJ,GAAU,GAA7D,EAAmEG,QAAnE,CAA4E,EAA5E,CAAhB;AAAA,GADiB,CAAN;AAAA,CAAb;;AAGA,IAAIC,SAAJ,EAAeC,OAAf;AAEEC,EAAE,CAAC,4BAAD,EAA+B,UAAAC,EAAE,EAAI;AACvC,MAAMC,IAAI,GAAG;AAACC,IAAAA,IAAI,EAAE,oBAAP;AAA6BC,IAAAA,WAAW,EAAE;AAA1C,GAAb;;AACAlB,gBAAKmB,OAAL,CAAaf,GAAb,EACEgB,IADF,CACO,cADP,EAEEC,GAFF,CAEM,QAFN,EAEgB,kBAFhB,EAGEC,IAHF,CAGON,IAHP,EAIEO,GAJF,CAIM,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClBtB,IAAAA,MAAM,CAACsB,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAzB,IAAAA,MAAM,CAACsB,GAAG,CAACI,IAAJ,CAASb,IAAV,CAAN,CAAsBW,EAAtB,CAAyBG,OAAzB,CAAiC;AAACb,MAAAA,IAAI,EAAED,IAAI,CAACC;AAAZ,KAAjC;AACAL,IAAAA,SAAS,GAAGa,GAAG,CAACI,IAAJ,CAASb,IAAT,CAAce,EAA1B;AACAhB,IAAAA,EAAE;AACF,GATF;AAUA,CAZE,CAAF;AAcAD,EAAE,CAAC,0DAAD,EAA6D,UAAAC,EAAE,EAAI;AACrE,MAAMC,IAAI,GAAG;AAACC,IAAAA,IAAI,EAAE,oBAAP;AAA6Be,IAAAA,YAAY,EAAE;AAA3C,GAAb;;AACAhC,gBAAKmB,OAAL,CAAaf,GAAb,EACEgB,IADF,CACO,cADP,EAEEC,GAFF,CAEM,QAFN,EAEgB,kBAFhB,EAGEC,IAHF,CAGON,IAHP,EAIEO,GAJF,CAIM,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClBtB,IAAAA,MAAM,CAACsB,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAH,IAAAA,GAAG,CAACI,IAAJ,CAASI,MAAT,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8B,SAA9B,EAAyCC,GAAzC,CAA6C,wBAA7C;AACArB,IAAAA,EAAE;AACF,GARF;AASA,CAXE,CAAF;AAaDD,EAAE,CAAC,uDAAD,EAA0D,UAAAC,EAAE,EAAI;AACjE,MAAMC,IAAI,GAAG;AAACC,IAAAA,IAAI,EAAE;AAAP,GAAb;;AACAjB,gBAAKmB,OAAL,CAAaf,GAAb,EACEgB,IADF,CACO,cADP,EAEEC,GAFF,CAEM,QAFN,EAEgB,kBAFhB,EAGEC,IAHF,CAGON,IAHP,EAIEO,GAJF,CAIM,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClBtB,IAAAA,MAAM,CAACsB,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAH,IAAAA,GAAG,CAACI,IAAJ,CAASI,MAAT,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8B,SAA9B,EAAyCC,GAAzC,CAA6C,wBAA7C;AACArB,IAAAA,EAAE;AACF,GARF;AASA,CAXC,CAAF;AAaAD,EAAE,CAAC,8CAAD,EAAiD,UAAAC,EAAE,EAAI;AACxDf,gBAAKmB,OAAL,CAAaf,GAAb,EACEiC,GADF,CACM,8BADN,EAEEhB,GAFF,CAEM,QAFN,EAEgB,kBAFhB,EAGEE,GAHF,CAGM,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClBtB,IAAAA,MAAM,CAACsB,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAH,IAAAA,GAAG,CAACI,IAAJ,CAASI,MAAT,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8B,QAA9B,EAAwCC,GAAxC,CAA4C,SAA5C;AACAX,IAAAA,GAAG,CAACI,IAAJ,CAASI,MAAT,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8B,SAA9B,EAAyCC,GAAzC,CAA6C,kBAA7C;AACAjC,IAAAA,MAAM,CAACsB,GAAG,CAACI,IAAJ,CAASb,IAAV,CAAN,CAAsBW,EAAtB,CAAyBW,GAAzB,CAA6BJ,IAA7B,CAAkCK,QAAlC,CAA2C,CAA3C;AACAxB,IAAAA,EAAE;AACF,GATF;AAUA,CAXC,CAAF;AAcAD,EAAE,CAAC,mCAAD,EAAsC,UAAAC,EAAE,EAAI;AAC7Cf,gBAAKmB,OAAL,CAAaf,GAAb,EACEiC,GADF,wBACsBzB,SADtB,GAEES,GAFF,CAEM,QAFN,EAEgB,kBAFhB,EAGEE,GAHF,CAGM,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClBtB,IAAAA,MAAM,CAACsB,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAH,IAAAA,GAAG,CAACI,IAAJ,CAASI,MAAT,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8B,SAA9B,EAAyCC,GAAzC,CAA6C,cAA7C;AACAX,IAAAA,GAAG,CAACI,IAAJ,CAASb,IAAT,CAAciB,MAAd,CAAqBC,IAArB,CAA0BC,QAA1B,CAAmC,MAAnC;AACApB,IAAAA,EAAE;AACF,GARF;AASA,CAVC,CAAF;AAaAD,EAAE,CAAC,uDAAD,EAA0D,UAAAC,EAAE,EAAI;AACjE,MAAIyB,SAAS,GAAGnC,IAAI,EAApB;;AACAL,gBAAKmB,OAAL,CAAaf,GAAb,EACEiC,GADF,wBACsBG,SADtB,GAEEnB,GAFF,CAEM,QAFN,EAEgB,kBAFhB,EAGEE,GAHF,CAGM,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClBtB,IAAAA,MAAM,CAACsB,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAH,IAAAA,GAAG,CAACI,IAAJ,CAASI,MAAT,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8B,SAA9B,EACEC,GADF,8BAC4BI,SAD5B;AAEAzB,IAAAA,EAAE;AACF,GARF;AASA,CAXC,CAAF;AAaAD,EAAE,CAAC,qDAAD,EAAwD,UAAAC,EAAE,EAAI;AAC/D,MAAMV,IAAI,GAAG,cAAb;;AACAL,gBAAKmB,OAAL,CAAaf,GAAb,EACEiC,GADF,wBACsBhC,IADtB,GAEEgB,GAFF,CAEM,QAFN,EAEgB,kBAFhB,EAGEE,GAHF,CAGM,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClBtB,IAAAA,MAAM,CAACsB,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAH,IAAAA,GAAG,CAACI,IAAJ,CAASI,MAAT,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8B,SAA9B,EAAyCC,GAAzC,CAA6C,cAA7C;AACArB,IAAAA,EAAE;AACF,GAPF;AAQA,CAVC,CAAF;AAYAD,EAAE,CAAC,uCAAD,EAA0C,UAAAC,EAAE,EAAI;AACjD,MAAM0B,WAAW,GAAG;AAACvB,IAAAA,WAAW,EAAE;AAAd,GAApB;;AACAlB,gBAAKmB,OAAL,CAAaf,GAAb,EACEsC,GADF,wBACsB9B,SADtB,GAEES,GAFF,CAEM,QAFN,EAEgB,kBAFhB,EAGEC,IAHF,CAGOmB,WAHP,EAIElB,GAJF,CAIM,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClBtB,IAAAA,MAAM,CAACsB,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAzB,IAAAA,MAAM,CAACsB,GAAG,CAACI,IAAJ,CAASb,IAAT,CAAcE,WAAf,CAAN,CAAkCU,KAAlC,CAAwCa,WAAW,CAACvB,WAApD;AACAH,IAAAA,EAAE;AACF,GARF;AASA,CAXC,CAAF;AAYD4B,QAAQ,CAAC,oCAAD,EAAuC,YAAI;AAClD,MAAMF,WAAW,GAAG;AACnBvB,IAAAA,WAAW,EAAE,sCADM;AAEnB0B,IAAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAG,8BAAV;AAA0CC,MAAAA,MAAM,EAAE,CAAlD;AAAqDC,MAAAA,KAAK,EAAE,OAA5D;AAAqE7B,MAAAA,WAAW,EAAE;AAAlF,KAAD;AAFY,GAApB;AAKAJ,EAAAA,EAAE,CAAC,uEAAD,EAA0E,UAAAC,EAAE,EAAI;AACjFf,kBAAKmB,OAAL,CAAaf,GAAb,EACEsC,GADF,wBACsB9B,SADtB,GAEES,GAFF,CAEM,QAFN,EAEgB,kBAFhB,EAGEC,IAHF,CAGOmB,WAHP,EAIElB,GAJF,CAIM,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClBtB,MAAAA,MAAM,CAACsB,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAb,MAAAA,EAAE;AACF,KAPF;AAQA,GATC,CAAF;AAWAD,EAAAA,EAAE,CAAC,uEAAD,EAA0E,UAAAC,EAAE,EAAI;AACjFf,kBAAKmB,OAAL,CAAaf,GAAb,EACEiC,GADF,yCACuCzB,SADvC,GAEES,GAFF,CAEM,QAFN,EAEgB,kBAFhB,EAGEE,GAHF,CAGM,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClBtB,MAAAA,MAAM,CAACsB,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAzB,MAAAA,MAAM,CAACsB,GAAG,CAACI,IAAJ,CAASb,IAAV,CAAN,CAAsBW,EAAtB,CAAyBO,IAAzB,CAA8BK,QAA9B,CAAuC,CAAvC;AACApC,MAAAA,MAAM,CAACsB,GAAG,CAACI,IAAJ,CAASb,IAAT,CAAc,CAAd,EAAiB6B,KAAlB,CAAN,CAA+BjB,KAA/B,CAAqCa,WAAW,CAACG,KAAZ,CAAkB,CAAlB,EAAqBC,KAA1D;AACA1C,MAAAA,MAAM,CAACsB,GAAG,CAACI,IAAJ,CAASb,IAAT,CAAc,CAAd,EAAiBE,WAAlB,CAAN,CAAqCU,KAArC,CAA2Ca,WAAW,CAACG,KAAZ,CAAkB,CAAlB,EAAqB1B,WAAhE;AACAH,MAAAA,EAAE;AACF,KATF;AAUA,GAXC,CAAF;AAaAD,EAAAA,EAAE,CAAC,+CAAD,EAAkD,UAAAC,EAAE,EAAI;AACzD,QAAIiC,WAAW,GAAG3C,IAAI,EAAtB;AACA,QAAMoC,WAAW,GAAG;AAACvB,MAAAA,WAAW,EAAE;AAAd,KAApB;;AACAlB,kBAAKmB,OAAL,CAAaf,GAAb,EACEsC,GADF,wBACsBM,WADtB,GAEE3B,GAFF,CAEM,QAFN,EAEgB,kBAFhB,EAGEC,IAHF,CAGOmB,WAHP,EAIElB,GAJF,CAIM,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClBtB,MAAAA,MAAM,CAACsB,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAH,MAAAA,GAAG,CAACI,IAAJ,CAASI,MAAT,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8B,SAA9B,EACEC,GADF,8BAC4BY,WAD5B;AAEAjC,MAAAA,EAAE;AACF,KATF;AAUA,GAbC,CAAF;AAeAD,EAAAA,EAAE,CAAC,2CAAD,EAA8C,UAAAC,EAAE,EAAI;AACrD,QAAMV,IAAI,GAAG,cAAb;AACA,QAAMoC,WAAW,GAAG;AAACvB,MAAAA,WAAW,EAAE;AAAd,KAApB;;AACAlB,kBAAKmB,OAAL,CAAaf,GAAb,EACEsC,GADF,wBACsBrC,IADtB,GAEEgB,GAFF,CAEM,QAFN,EAEgB,kBAFhB,EAGEC,IAHF,CAGOmB,WAHP,EAIElB,GAJF,CAIM,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClBtB,MAAAA,MAAM,CAACsB,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAH,MAAAA,GAAG,CAACI,IAAJ,CAASI,MAAT,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8B,SAA9B,EAAyCC,GAAzC,CAA6C,cAA7C;AACArB,MAAAA,EAAE;AACF,KARF;AASA,GAZC,CAAF;AAeA,CA5DO,CAAR;AA8DCD,EAAE,CAAC,6CAAD,EAAgD,UAAAC,EAAE,EAAI;AACvD,MAAMV,IAAI,GAAG,cAAb;;AACAL,gBAAKmB,OAAL,CAAaf,GAAb,EACE6C,MADF,wBACyB5C,IADzB,GAEEgB,GAFF,CAEM,QAFN,EAEgB,kBAFhB,EAGEE,GAHF,CAGM,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClBtB,IAAAA,MAAM,CAACsB,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAH,IAAAA,GAAG,CAACI,IAAJ,CAASI,MAAT,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8B,SAA9B,EAAyCC,GAAzC,CAA6C,cAA7C;AACArB,IAAAA,EAAE;AACF,GAPF;AAQA,CAVC,CAAF;AAYA4B,QAAQ,CAAC,6BAAD,EAAgC,YAAM;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMO,MAAM,GAAG;AAACjC,IAAAA,IAAI,EAAE,iBAAP;AAA0BC,IAAAA,WAAW,EAAE;AAAvC,GAAf;AACA,MAAMiC,IAAI,GAAG;AACZN,IAAAA,KAAK,EAAE,OADK;AACIE,IAAAA,KAAK,EAAE,aADX;AAC0BD,IAAAA,MAAM,EAAE,CADlC;AAEZ5B,IAAAA,WAAW,EAAE,4IAFD;AAGZkC,IAAAA,OAAO,EAAG,CACT;AAACnC,MAAAA,IAAI,EAAE,mBAAP;AAA4BC,MAAAA,WAAW,EAAE;AAAzC,KADS,EAET;AAACD,MAAAA,IAAI,EAAE,EAAP;AAAWC,MAAAA,WAAW,EAAE;AAAxB,KAFS,EAGT;AAACD,MAAAA,IAAI,EAAE,mBAAP;AAA4BC,MAAAA,WAAW,EAAE;AAAzC,KAHS,EAIT;AAACa,MAAAA,EAAE,EAAE;AAAL,KAJS,EAKT;AAACA,MAAAA,EAAE,EAAE1B,IAAI;AAAT,KALS,EAMT;AAAC0B,MAAAA,EAAE,EAAEnB;AAAL,KANS;AAHE,GAAb;AAaAE,EAAAA,EAAE,CAAC,mGAAD,EAAsG,UAACuC,IAAD,EAAQ;AAC/GrD,kBAAKmB,OAAL,CAAaf,GAAb,EACCgB,IADD,CACM,YADN,EAECC,GAFD,CAEK,cAFL,EAEqB,kBAFrB,EAGCC,IAHD,CAGM6B,IAHN,EAIC5B,GAJD,CAIK,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClB6B,MAAAA,OAAO,CAACC,GAAR,CAAc3C,SAAS,CAAC4C,IAAV,EAAd;AACArD,MAAAA,MAAM,CAACsB,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAzB,MAAAA,MAAM,CAACsB,GAAG,CAACI,IAAJ,CAASb,IAAV,CAAN,CAAsBW,EAAtB,CAAyBG,OAAzB,CAAiC;AAACe,QAAAA,KAAK,EAAEM,IAAI,CAACN;AAAb,OAAjC;AACA1C,MAAAA,MAAM,CAACsB,GAAG,CAACI,IAAJ,CAASb,IAAV,CAAN,CAAsBW,EAAtB,CAAyBG,OAAzB,CAAiC;AAACiB,QAAAA,KAAK,EAAEI,IAAI,CAACJ;AAAb,OAAjC;AACA5C,MAAAA,MAAM,CAACsB,GAAG,CAACI,IAAJ,CAASb,IAAV,CAAN,CAAsBW,EAAtB,CAAyBG,OAAzB,CAAiC;AAACZ,QAAAA,WAAW,EAAEiC,IAAI,CAACjC;AAAnB,OAAjC;AACAf,MAAAA,MAAM,CAACsB,GAAG,CAACI,IAAJ,CAASb,IAAV,CAAN,CAAsBW,EAAtB,CAAyBG,OAAzB,CAAiC;AAACgB,QAAAA,MAAM,EAAEK,IAAI,CAACL;AAAd,OAAjC;AACAjC,MAAAA,OAAO,GAAGY,GAAG,CAACI,IAAJ,CAASb,IAAT,CAAce,EAAxB;AACAsB,MAAAA,IAAI;AACJ,KAbD;AAcA,GAfC,CAAF,CA7B6C,CA8C7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,CA1DO,CAAR","sourceRoot":"C:\\Users\\mi\\Documents\\GitHub\\Books\\src\\server\\test","sourcesContent":["import chai from 'chai';\r\nimport chatHttp from 'chai-http';\r\nimport 'chai/register-should';\r\n\r\nchai.use(chatHttp);\r\n\r\nconst {expect} = chai;\r\nconst app = 'http://localhost:8080'\r\nconst uuid = () => 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,\r\n  (value_x, r) => ('x' === value_x ? (r = Math.random() * 16 | 0) : (r & 0x3 | 0x8)).toString(16));\r\n\r\nlet author_id, book_id;\r\n\r\n  it('It should create an author', cb => {\r\n\t\tconst data = {name: 'James Hadley Chase', description: 'An English writer'};\r\n\t\tchai.request(app)\r\n\t\t\t.post('/api/authors')\r\n\t\t\t.set('Accept', 'application/json')\r\n\t\t\t.send(data)\r\n\t\t\t.end((err, res) => {\r\n\t\t\t\texpect(res.status).to.equal(201);\r\n\t\t\t\texpect(res.body.data).to.include({name: data.name});\r\n\t\t\t\tauthor_id = res.body.data.id;\r\n\t\t\t\tcb();\r\n\t\t\t});\r\n\t});\r\n\r\n  it('It should not create a author with incomplete parameters', cb => {\r\n\t\tconst data = {name: 'James Hadley Chase', descriptions: ''};\r\n\t\tchai.request(app)\r\n\t\t\t.post('/api/authors')\r\n\t\t\t.set('Accept', 'application/json')\r\n\t\t\t.send(data)\r\n\t\t\t.end((err, res) => {\r\n\t\t\t\texpect(res.status).to.equal(400);\r\n\t\t\t\tres.body.should.have.property('message').eql('Incomplete information');\r\n\t\t\t\tcb();\r\n\t\t\t});\r\n\t});\r\n\r\n\tit('It should not create a author with missing parameters', cb => {\r\n\t\tconst data = {name: 'James Hadley Chase'};\r\n\t\tchai.request(app)\r\n\t\t\t.post('/api/authors')\r\n\t\t\t.set('Accept', 'application/json')\r\n\t\t\t.send(data)\r\n\t\t\t.end((err, res) => {\r\n\t\t\t\texpect(res.status).to.equal(400);\r\n\t\t\t\tres.body.should.have.property('message').eql('Incomplete information');\r\n\t\t\t\tcb();\r\n\t\t\t});\r\n\t});\r\n\r\n\tit('It should return the previously added author', cb => {\r\n\t\tchai.request(app)\r\n\t\t\t.get('/api/authors?limit=50&page=0')\r\n\t\t\t.set('Accept', 'application/json')\r\n\t\t\t.end((err, res) => {\r\n\t\t\t\texpect(res.status).to.equal(200);\r\n\t\t\t\tres.body.should.have.property('status').eql('success');\r\n\t\t\t\tres.body.should.have.property('message').eql('Authors Received');\r\n\t\t\t\texpect(res.body.data).to.not.have.lengthOf(0);\r\n\t\t\t\tcb();\r\n\t\t\t});\r\n\t});\r\n\r\n\t\r\n\tit('It should get a particular author', cb => {\r\n\t\tchai.request(app)\r\n\t\t\t.get(`/api/authors/${author_id}`)\r\n\t\t\t.set('Accept', 'application/json')\r\n\t\t\t.end((err, res) => {\r\n\t\t\t\texpect(res.status).to.equal(200);\r\n\t\t\t\tres.body.should.have.property('message').eql('Author Found');\r\n\t\t\t\tres.body.data.should.have.property('name');\r\n\t\t\t\tcb();\r\n\t\t\t});\r\n\t});\r\n\r\n\t\r\n\tit('It should not get a particular author with invalid id', cb => {\r\n\t\tlet random_id = uuid();\r\n\t\tchai.request(app)\r\n\t\t\t.get(`/api/authors/${random_id}`)\r\n\t\t\t.set('Accept', 'application/json')\r\n\t\t\t.end((err, res) => {\r\n\t\t\t\texpect(res.status).to.equal(404);\r\n\t\t\t\tres.body.should.have.property('message')\r\n\t\t\t\t\t.eql(`Author with the id ${random_id} cannot be found`);\r\n\t\t\t\tcb();\r\n\t\t\t});\r\n\t});\r\n\r\n\tit('It should not get a particular author with non-uuid', cb => {\r\n\t\tconst uuid = 'invalid_uuid';\r\n\t\tchai.request(app)\r\n\t\t\t.get(`/api/authors/${uuid}`)\r\n\t\t\t.set('Accept', 'application/json')\r\n\t\t\t.end((err, res) => {\r\n\t\t\t\texpect(res.status).to.equal(400);\r\n\t\t\t\tres.body.should.have.property('message').eql('Invalid UUID');\r\n\t\t\t\tcb();\r\n\t\t\t});\r\n\t});\r\n\r\n\tit('It should update author`s description', cb => {\r\n\t\tconst updatedData = {description: 'An English writer. Novelist.'};\r\n\t\tchai.request(app)\r\n\t\t\t.put(`/api/authors/${author_id}`)\r\n\t\t\t.set('Accept', 'application/json')\r\n\t\t\t.send(updatedData)\r\n\t\t\t.end((err, res) => {\r\n\t\t\t\texpect(res.status).to.equal(200);\r\n\t\t\t\texpect(res.body.data.description).equal(updatedData.description);\r\n\t\t\t\tcb();\r\n\t\t\t});\r\n\t});\r\ndescribe('Testing the Author update requests', ()=>{\r\n\tconst updatedData = {\r\n\t\tdescription: 'An English writer. Novelist. The Man',\r\n\t\tbooks: [{ title : 'Нет орхидей для мисс Блэндиш', rating: 4, genre: 'Роман', description: 'роман английского писателя Джеймса Хедли Чейза, написанный в 1939 году'}]\r\n\t};\r\n\r\n\tit('It should update author books using correct book information - part 1', cb => {\r\n\t\tchai.request(app)\r\n\t\t\t.put(`/api/authors/${author_id}`)\r\n\t\t\t.set('Accept', 'application/json')\r\n\t\t\t.send(updatedData)\r\n\t\t\t.end((err, res) => {\r\n\t\t\t\texpect(res.status).to.equal(200);\r\n\t\t\t\tcb();\r\n\t\t\t})\r\n\t});\r\n\r\n\tit('It should update author books using correct book information - part 2', cb => {\r\n\t\tchai.request(app)\r\n\t\t\t.get(`/api/books/books-by-author-id/${author_id}`)\r\n\t\t\t.set('Accept', 'application/json')\r\n\t\t\t.end((err, res) => {\r\n\t\t\t\texpect(res.status).to.equal(200);\r\n\t\t\t\texpect(res.body.data).to.have.lengthOf(1);\r\n\t\t\t\texpect(res.body.data[0].title).equal(updatedData.books[0].title);\r\n\t\t\t\texpect(res.body.data[0].description).equal(updatedData.books[0].description);\r\n\t\t\t\tcb();\r\n\t\t\t})\r\n\t})\r\n\t\r\n\tit('It should not update a author with invalid id', cb => {\r\n\t\tlet random_uuid = uuid();\r\n\t\tconst updatedData = {description: 'An English writer. Novelist.'};\r\n\t\tchai.request(app)\r\n\t\t\t.put(`/api/authors/${random_uuid}`)\r\n\t\t\t.set('Accept', 'application/json')\r\n\t\t\t.send(updatedData)\r\n\t\t\t.end((err, res) => {\r\n\t\t\t\texpect(res.status).to.equal(404);\r\n\t\t\t\tres.body.should.have.property('message')\r\n\t\t\t\t\t.eql(`Author with the id ${random_uuid} cannot be found`);\r\n\t\t\t\tcb();\r\n\t\t\t});\r\n\t});\r\n\r\n\tit('It should not update a author with non-id', cb => {\r\n\t\tconst uuid = 'invalid_uuid';\r\n\t\tconst updatedData = {description: 'An English writer. Novelist.'};\r\n\t\tchai.request(app)\r\n\t\t\t.put(`/api/authors/${uuid}`)\r\n\t\t\t.set('Accept', 'application/json')\r\n\t\t\t.send(updatedData)\r\n\t\t\t.end((err, res) => {\r\n\t\t\t\texpect(res.status).to.equal(400);\r\n\t\t\t\tres.body.should.have.property('message').eql('Invalid UUID');\r\n\t\t\t\tcb();\r\n\t\t\t});\r\n\t});\r\n\r\n\r\n})\r\n\t\r\n\tit('It should not delete a author with non-uuid', cb => {\r\n\t\tconst uuid = 'invalid_uuid';\r\n\t\tchai.request(app)\r\n\t\t\t.delete(`/api/authors/${uuid}`)\r\n\t\t\t.set('Accept', 'application/json')\r\n\t\t\t.end((err, res) => {\r\n\t\t\t\texpect(res.status).to.equal(400);\r\n\t\t\t\tres.body.should.have.property('message').eql('Invalid UUID');\r\n\t\t\t\tcb();\r\n\t\t\t});\r\n\t});\r\n\r\n\tdescribe('Testing the Book endpoints:', () => {\r\n\r\n\t\t// it('It should get all only one book - \"Нет орхидей для мисс Блэндиш\"', cb => {\r\n\t\t// \tchai.request(app)\r\n\t\t// \t\t.get('/api/books?limit=50&page=0')\r\n\t\t// \t\t.set('Accept', 'book/json')\r\n\t\t// \t\t.end((err, res) => {\r\n\t\t// \t\t\texpect(res.status).to.equal(200);\r\n\t\t// \t\t\tres.body.should.have.property('status').eql('success');\r\n\t\t// \t\t\texpect(res.body.data).to.have.lengthOf(1);\r\n\t\t// \t\t\texpect(res.body.data[0].title).equal(\"Нет орхидей для мисс Блэндиш\");\r\n\t\t// \t\t\tcb();\r\n\t\t// \t\t});\r\n\t\t// });\r\n\r\n\t\tconst author = {name: 'Chuck Palahniuk', description: 'An American writer'};\r\n\t\tconst book = {\r\n\t\t\ttitle: 'Choke', genre: 'Black humor', rating: 4,\r\n\t\t\tdescription: 'The story focuses on Victor, a sex addict, who must find work in order to afford the care that his mother is receiving in her nursing home',\r\n\t\t\tauthors : [ \r\n\t\t\t\t{name: 'Chuck Palahniuk 1', description: 'An American writer'},\r\n\t\t\t\t{name: '', description: 'An American writer'},\r\n\t\t\t\t{name: 'Chuck Palahniuk 1', description: ''},\r\n\t\t\t\t{id: 'invalid_uuid'},\r\n\t\t\t\t{id: uuid()},\r\n\t\t\t\t{id: author_id}\r\n\t\t ]\r\n\t\t};\r\n\r\n\t\tit('It should create a book using the id from the previous step and the finished form object - part 1', (done)=>{\r\n\t\t\tchai.request(app)\r\n\t\t\t.post('/api/books')\r\n\t\t\t.set('Content-Type', 'application/json')\r\n\t\t\t.send(book)\r\n\t\t\t.end((err, res) => {\r\n\t\t\t\tconsole.log(  author_id.trim() )\r\n\t\t\t\texpect(res.status).to.equal(201);\r\n\t\t\t\texpect(res.body.data).to.include({title: book.title});\r\n\t\t\t\texpect(res.body.data).to.include({genre: book.genre});\r\n\t\t\t\texpect(res.body.data).to.include({description: book.description});\r\n\t\t\t\texpect(res.body.data).to.include({rating: book.rating});\r\n\t\t\t\tbook_id = res.body.data.id;\r\n\t\t\t\tdone()\r\n\t\t\t})\r\n\t\t})\r\n\t\t\r\n\t\t// it('There should be only two authors, false data should not have been taken into account - part 3', cb => {\r\n\t\t// \tchai.request(app)\r\n\t\t// \t.get('/api/books/authors-by-book-id/'+book_id)\r\n\t\t// \t.set('Content-Type', 'application/json')\r\n\t\t// \t.end((err, res) => {\r\n\t\t// \t\tconsole.log('/api/books/authors-by-book-id/'+book_id )\r\n\t\t// \t\texpect(res.body.data).to.have.lengthOf(2);\r\n\t\t// \t\tcb();\r\n\t\t// \t});\r\n\t\t// });\r\n\t\t\r\n\r\n\t})\r\n\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f507a797da55ed9ca597a36bcc4ea89c310cb41a","contentHash":"c781b608b8991269a91acc9503ef95742de7794b317edb288a731fb7520443d8"}}